# run_containers.py base.yaml full.overlay.yaml

constants:
  dataset_name: dataset1

  influxdb_q: 0
  cadvisor_q: 0
  prometheus_q: 0
  mininet_q: 0
  awareness_q: 0

  agent_sm_q: 0
  agent_fp_q: 0
  agent_da_q: 0
  
  # ==================
  # internal constants
  # ==================

  network_name: mas-network
  influxdb_name: ngcdi_metrics

  # needs to be lazy because we are using constants $base_dir and $dataset_name
  # see examples/8-lazy-constants.yaml
  ^sckl_core_log_dir: $base_dir++/runs/++$dataset_name++/
  ^sckl_data_dir: $base_dir++/sckl-data/condition

  awareness_hostname: awareness
  mininet_hostname: mininet

  ^awareness_server_url: http://++$awareness_hostname++:8080
  ^mininet_server_url: http://++$mininet_hostname++:8081

  ^agent_common_config:
    image: ngcdi/sckl-demo:0.6
    command: ""
    # auto_remove: True
    mem_limit: 550m
    mem_reservation: 500m
    network: $network_name
    environment:
      CLUSTER_PORT: 1600
      SEED_PORT_1600_TCP_ADDR: seed1
      SEED_PORT_1600_TCP_PORT: 1600
      DATADIR: data/
      SDNC_SERVER: awareness
      SDNC_PORT: 8080
      NETW_SERVER: mininet
      NETW_PORT: 9081
      NETW_API_KEY: ""
      NETW_URLS: 
      - api/get_intent
      - api/push_intent
      LEFT_NEIGHBOUR: "seed0"
      RIGHT_NEIGHBOUR: "seed1"
      AWARENESS_SERVER_URL: $^awareness_server_url
      UI_URL: ""
      MONITORING_URL: /stats/port/
      NODES: ++$agent_da_q
      KEY_SERVICES: $key_services
    volumes:
      $^sckl_data_dir:
        bind: /data
        mode: ro
  
  ^agent_common_rules:
    - value: $^agent_common_config
    - target: [name, hostname, environment->CLUSTER_IP]
      value: $name_prefix++$id
      local_constants:
        - name: id
          type: auto_increment
          start: 1
    - target: environment->LAUNCHER
      value: $launcher
    - target: environment->DEV_ID
      value: ++$id
      local_constants:
        - name: id
          type: auto_increment
          start: 1
    - target: volumes->$^sckl_core_log_dir++$name++.log
      value: 
        bind: /opt/docker/logs/app.log
        mode: rw
      local_constants:
        - name: name
          type: from_property
          source: name
  
  ^agent_common_hooks:
    preup:
      commands:
      - "> $LOG_FILE"
      - chmod a+w $LOG_FILE
      environment:
      - name: LOG_FILE
        value: $^sckl_core_log_dir++$name++.log
      local_constants:
        - name: name
          type: from_property
          source: name
    preup-global:
      commands:
      - mkdir -p $LOG_DIR
      environment:
      - name: LOG_DIR
        value: $^sckl_core_log_dir

groups:
  influxdb:
    containers: $influxdb_q

    rules:
      # if you are wondering why there is no "target" specified, see examples/7-tricks.yaml
      - value: 
          image: influxdb:1.7
          command: ""
          name: influxdb1
          mem_limit: 500m
          mem_reservation: 450m
          network: $network_name
          volumes:
            influxdb1_datest1:
              bind: /var/lib/influxdb
              mode: rw
          ports:
            8086: 18086
          environment:
            INFLUXDB_DB: $influxdb_name
  
  cadvisor:
    containers: $cadvisor_q
    rules:
      - value: 
          image: google/cadvisor:latest
          command: 
          name: cadvisor1
          privileged: True
          mem_limit: 350m
          mem_reservation: 300m
          network: $network
          ports:
            8080: 9080
          volumes:
            /:
              bind: /rootfs
              mode: ro
            /var/run:
              bind: /var/run
              mode: rw
            /sys:
              bind: /sys
              mode: ro
            /snap/docker:
              bind: /var/lib/docker
              mode: ro
          environment:
            storage_driver: influxdb
            storage_driver_db: $influxdb_name
            storage_driver_host: influxdb1:8086
  
  prometheus: 
    containers: $prometheus_q
    rules:
      - value:
          image: prom/prometheus:latest
          command: --config.file=/etc/prometheus/prometheus.yml
          name: prom1
          mem_limit: 500m
          mem_reservation: 450m
          network: $network_name
          ports: 
            9091: 9090
          volumes:
            $base_dir++/prometheus/config.yml:
              bind: /etc/prometheus/prometheus.yml
              mode: ro
            prom1_vol:
              bind: /prometheus
              mode: rw
    
  awareness:
    # currently only supports 0 or 1 awareness (based on Ryu) instances
    containers: $awareness_q
    rules:
      - value:
          name: $awareness_hostname
          hostname: $awareness_hostname
          image: mbyzhang/awareness
          network: $network_name
          environment:
            MININET_SERVER_URL: $^mininet_server_url
  
    
  mininet:
    # currently only supports 0 or 1 mininet instances
    containers: $mininet_q
    rules:
      - value:
          name: $mininet_hostname
          hostname: $mininet_hostname
          image: mbyzhang/mininet
          privileged: True
          environment:
            MN_CONTROLLER_HOST: $awareness_hostname
            MN_TOPO: custom_mesh
          command: ""
          network: $network_name

  service_manager:
    constants:
      name_prefix: seed
      launcher: serviceManager
      key_services: sc1
    containers: $agent_sm_q
    rules: $^agent_common_rules
    hooks: $^agent_common_hooks

  function_provisioner:
    constants:
      name_prefix: prov
      launcher: functionProvisioner
      key_services: ""
    containers: $agent_fp_q
    rules: $^agent_common_rules
    hooks: $^agent_common_hooks
  
  digital_assets:
    constants:
      name_prefix: c
      launcher: digiasset
      key_services: ""
    containers: $agent_da_q
    rules: $^agent_common_rules
    hooks: $^agent_common_hooks


